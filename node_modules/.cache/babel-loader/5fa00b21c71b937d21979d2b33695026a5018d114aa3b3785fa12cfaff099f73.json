{"ast":null,"code":"var _jsxFileName = \"/home/vpnwan/Pictures/todo/src/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  // ...\n  const Todo = async (title, body) => {\n    await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: title,\n        body: body,\n        userId: Math.random().toString(36).slice(2)\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(data => {\n      setPosts(posts => [data, ...posts]);\n      setTitle('');\n      setBody('');\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    addPosts(title, body);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"\",\n          className: \"form-control\",\n          id: \"\",\n          cols: \"10\",\n          rows: \"8\",\n          value: body,\n          onChange: e => setBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"qwG1af4LOHAgcSQ+L8KuMt9FIzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","title","setTitle","body","setBody","Todo","fetch","method","JSON","stringify","userId","Math","random","toString","slice","headers","then","response","json","data","setPosts","posts","catch","err","console","log","message","handleSubmit","e","preventDefault","addPosts","target","value"],"sources":["/home/vpnwan/Pictures/todo/src/Todo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nconst App = () => {\nconst [title, setTitle] = useState('');\nconst [body, setBody] = useState('');\n// ...\nconst Todo = async (title, body) => {\n   await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n         title: title,\n         body: body,\n         userId: Math.random().toString(36).slice(2),\n      }),\n      headers: {\n         'Content-type': 'application/json; charset=UTF-8',\n      },\n   })\n      .then((response) => response.json())\n      .then((data) => {\n         setPosts((posts) => [data, ...posts]);\n         setTitle('');\n         setBody('');\n      })\n      .catch((err) => {\n         console.log(err.message);\n      });\n};\n\nconst handleSubmit = (e) => {\n   e.preventDefault();\n   addPosts(title, body);\n};    \n\nreturn (\n   <div className=\"app\">\n      <div className=\"add-post-container\">\n         <form onSubmit={handleSubmit}>\n            <input type=\"text\" className=\"form-control\" value={title}\n               onChange={(e) => setTitle(e.target.value)}\n            />\n            <textarea name=\"\" className=\"form-control\" id=\"\" cols=\"10\" rows=\"8\" \n               value={body} onChange={(e) => setBody(e.target.value)} \n            ></textarea>\n            <button type=\"submit\">Add Post</button>\n         </form>\n      </div>\n      {/* ... */}\n   </div>\n);\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AACnD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAMO,IAAI,GAAG,OAAOJ,KAAK,EAAEE,IAAI,KAAK;IACjC,MAAMG,KAAK,CAAC,4CAA4C,EAAE;MACvDC,MAAM,EAAE,MAAM;MACdJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAAC;QAClBR,KAAK,EAAEA,KAAK;QACZE,IAAI,EAAEA,IAAI;QACVO,MAAM,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC;MAC7C,CAAC,CAAC;MACFC,OAAO,EAAE;QACN,cAAc,EAAE;MACnB;IACH,CAAC,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACbC,QAAQ,CAAEC,KAAK,IAAK,CAACF,IAAI,EAAE,GAAGE,KAAK,CAAC,CAAC;MACrCnB,QAAQ,CAAC,EAAE,CAAC;MACZE,OAAO,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,CACDkB,KAAK,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;IAC3B,CAAC,CAAC;EACR,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClBC,QAAQ,CAAC7B,KAAK,EAAEE,IAAI,CAAC;EACxB,CAAC;EAED,oBACG;IAAK,SAAS,EAAC,KAAK;IAAA,uBACjB;MAAK,SAAS,EAAC,oBAAoB;MAAA,uBAChC;QAAM,QAAQ,EAAEwB,YAAa;QAAA,wBAC1B;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,cAAc;UAAC,KAAK,EAAE1B,KAAM;UACtD,QAAQ,EAAG2B,CAAC,IAAK1B,QAAQ,CAAC0B,CAAC,CAACG,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC3C,eACF;UAAU,IAAI,EAAC,EAAE;UAAC,SAAS,EAAC,cAAc;UAAC,EAAE,EAAC,EAAE;UAAC,IAAI,EAAC,IAAI;UAAC,IAAI,EAAC,GAAG;UAChE,KAAK,EAAE7B,IAAK;UAAC,QAAQ,EAAGyB,CAAC,IAAKxB,OAAO,CAACwB,CAAC,CAACG,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C,eACZ;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACnC;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QAEH;AAET,CAAC;AAAC,GAhDIhC,GAAG;AAAA,KAAHA,GAAG;AAkDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}